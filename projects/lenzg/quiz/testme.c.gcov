        -:    0:Source:testme.c
        -:    0:Graph:testme.gcno
        -:    0:Data:testme.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include<stdio.h>
        -:    2:#include<string.h>
        -:    3:#include<stdlib.h>
        -:    4:#include<time.h>
        -:    5:
function inputChar called 2247 returned 100% blocks executed 100%
     2247:    6:char inputChar()
        -:    7:{
     2247:    8:    char randomChar = ' ';
     2247:    9:    char* testChars[9] = {'[', '(', '{', ' ', 'a', 'x', '}', ')', ']'};
        -:   10:   
     2247:   11:    randomChar = testChars[rand() % 9];
call    0 returned 100%
     2247:   12:    return randomChar;
        -:   13:}
        -:   14:
function inputString called 2247 returned 100% blocks executed 100%
     2247:   15:char *inputString()
        -:   16:{
        -:   17:    int i;
     2247:   18:    char* string = malloc(5 * sizeof(char)+1);
        -:   19:    int charToAdd;
     2247:   20:    char charArray[5] = {'r', 'e', 's', 'e', 't'};
    13482:   21:    for (i = 0; i < 5; i++)
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -:   22:    {
    11235:   23:        charToAdd = rand() % 6;
call    0 returned 100%
    11235:   24:        string[i] = charArray[charToAdd];
        -:   25:    }
     2247:   26:    string[5] = '\0';
        -:   27:    
        -:   28:    
     2247:   29:    return string;
        -:   30:}
        -:   31:
function testme called 1 returned 0% blocks executed 100%
        1:   32:void testme()
        -:   33:{
        1:   34:  int tcCount = 0;
        -:   35:  char *s;
        -:   36:  char c;
        1:   37:  int state = 0;
        -:   38:  while (1)
        -:   39:  {
     2247:   40:    tcCount++;
     2247:   41:    c = inputChar();
call    0 returned 100%
     2247:   42:    s = inputString();
call    0 returned 100%
     2247:   43:    printf("Iteration %d: c = %c, s = %s, state = %d\n", tcCount, c, s, state);
call    0 returned 100%
        -:   44:
     2247:   45:    if (c == '[' && state == 0) state = 1;
branch  0 taken 12% (fallthrough)
branch  1 taken 88%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
     2247:   46:    if (c == '(' && state == 1) state = 2;
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
     2247:   47:    if (c == '{' && state == 2) state = 3;
branch  0 taken 10% (fallthrough)
branch  1 taken 90%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
     2247:   48:    if (c == ' '&& state == 3) state = 4;
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
     2247:   49:    if (c == 'a' && state == 4) state = 5;
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
     2247:   50:    if (c == 'x' && state == 5) state = 6;
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
     2247:   51:    if (c == '}' && state == 6) state = 7;
branch  0 taken 12% (fallthrough)
branch  1 taken 88%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
     2247:   52:    if (c == ')' && state == 7) state = 8;
branch  0 taken 11% (fallthrough)
branch  1 taken 89%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
     2247:   53:    if (c == ']' && state == 8) state = 9;
branch  0 taken 12% (fallthrough)
branch  1 taken 88%
branch  2 taken 1% (fallthrough)
branch  3 taken 99%
     2247:   54:    if (s[0] == 'r' && s[1] == 'e'
branch  0 taken 15% (fallthrough)
branch  1 taken 85%
branch  2 taken 33% (fallthrough)
branch  3 taken 67%
      110:   55:       && s[2] == 's' && s[3] == 'e'
branch  0 taken 16% (fallthrough)
branch  1 taken 84%
branch  2 taken 22% (fallthrough)
branch  3 taken 78%
        4:   56:       && s[4] == 't' && s[5] == '\0'
branch  0 taken 25% (fallthrough)
branch  1 taken 75%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
        1:   57:       && state == 9)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   58:    {
        1:   59:      printf("error ");
call    0 returned 100%
        1:   60:      exit(200);
call    0 returned 0%
        -:   61:    }
     2246:   62:  }
        -:   63:}
        -:   64:
        -:   65:
function main called 1 returned 0% blocks executed 80%
        1:   66:int main(int argc, char *argv[])
        -:   67:{
        1:   68:    srand(time(NULL));
call    0 returned 100%
call    1 returned 100%
        1:   69:    testme();
call    0 returned 0%
    #####:   70:    return 0;
        -:   71:}
